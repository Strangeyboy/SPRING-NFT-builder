{"ast":null,"code":"import _slicedToArray from \"/Users/james/GitHub/SPRING-NFT-builder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/james/GitHub/SPRING-NFT-builder/src/card.js\";\nimport React from 'react';\nimport { useSpring, animated } from 'react-spring';\nimport './styles.css';\nexport function Card(_ref) {\n  var src = _ref.src;\n\n  var calc = function calc(x, y) {\n    return [-(y - window.innerHeight / 2) / 20, (x - window.innerWidth / 2) / 20, 1.1];\n  };\n\n  var trans = function trans(x, y, s) {\n    return \"perspective(600px) rotateX(\".concat(x, \"deg) rotateY(\").concat(y, \"deg) scale(\").concat(s, \")\");\n  };\n\n  var _useSpring = useSpring({\n    xys: [0, 0, 1],\n    config: {\n      mass: 5,\n      tension: 350,\n      friction: 40\n    }\n  }),\n      _useSpring2 = _slicedToArray(_useSpring, 2),\n      props = _useSpring2[0],\n      set = _useSpring2[1];\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(animated.div, {\n    className: \"card\",\n    id: \"capture\",\n    onMouseMove: function onMouseMove(_ref2) {\n      var x = _ref2.clientX,\n          y = _ref2.clientY;\n      return set({\n        xys: calc(x, y)\n      });\n    },\n    onMouseLeave: function onMouseLeave() {\n      return set({\n        xys: [0, 0, 1]\n      });\n    },\n    style: {\n      backgroundImage: 'url(' + src + ')',\n      transform: props.xys.interpolate(trans)\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/james/GitHub/SPRING-NFT-builder/src/card.js"],"names":["React","useSpring","animated","Card","src","calc","x","y","window","innerHeight","innerWidth","trans","s","xys","config","mass","tension","friction","props","set","clientX","clientY","backgroundImage","transform","interpolate"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,cAApC;AACA,OAAO,cAAP;AAEA,OAAO,SAAUC,IAAV,OAAsB;AAAA,MAANC,GAAM,QAANA,GAAM;;AAC7B,MAAMC,IAAI,GAAG,SAAPA,IAAO,CAACC,CAAD,EAAIC,CAAJ;AAAA,WAAU,CAAC,EAAEA,CAAC,GAAGC,MAAM,CAACC,WAAP,GAAqB,CAA3B,IAAgC,EAAjC,EAAqC,CAACH,CAAC,GAAGE,MAAM,CAACE,UAAP,GAAoB,CAAzB,IAA8B,EAAnE,EAAuE,GAAvE,CAAV;AAAA,GAAb;;AACA,MAAMC,KAAK,GAAG,SAARA,KAAQ,CAACL,CAAD,EAAIC,CAAJ,EAAOK,CAAP;AAAA,gDAA2CN,CAA3C,0BAA4DC,CAA5D,wBAA2EK,CAA3E;AAAA,GAAd;;AAF6B,mBAKNX,SAAS,CAAC;AAAEY,IAAAA,GAAG,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAP;AAAkBC,IAAAA,MAAM,EAAE;AAAEC,MAAAA,IAAI,EAAE,CAAR;AAAWC,MAAAA,OAAO,EAAE,GAApB;AAAyBC,MAAAA,QAAQ,EAAE;AAAnC;AAA1B,GAAD,CALH;AAAA;AAAA,MAKpBC,KALoB;AAAA,MAKbC,GALa;;AAO3B,sBACE,uDACA,oBAAC,QAAD,CAAU,GAAV;AACE,IAAA,SAAS,EAAC,MADZ;AACmB,IAAA,EAAE,EAAC,SADtB;AAEE,IAAA,WAAW,EAAE;AAAA,UAAYb,CAAZ,SAAGc,OAAH;AAAA,UAAwBb,CAAxB,SAAec,OAAf;AAAA,aAAgCF,GAAG,CAAC;AAAEN,QAAAA,GAAG,EAAER,IAAI,CAACC,CAAD,EAAIC,CAAJ;AAAX,OAAD,CAAnC;AAAA,KAFf;AAGE,IAAA,YAAY,EAAE;AAAA,aAAMY,GAAG,CAAC;AAAEN,QAAAA,GAAG,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP;AAAP,OAAD,CAAT;AAAA,KAHhB;AAIE,IAAA,KAAK,EAAE;AAAES,MAAAA,eAAe,EAAE,SAAOlB,GAAP,GAAW,GAA9B;AAAmCmB,MAAAA,SAAS,EAAEL,KAAK,CAACL,GAAN,CAAUW,WAAV,CAAsBb,KAAtB;AAA9C,KAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CADF;AAUD","sourcesContent":["import React from 'react'\nimport { useSpring, animated } from 'react-spring'\nimport './styles.css'\n\nexport function  Card({src}) {\nconst calc = (x, y) => [-(y - window.innerHeight / 2) / 20, (x - window.innerWidth / 2) / 20, 1.1]\nconst trans = (x, y, s) => `perspective(600px) rotateX(${x}deg) rotateY(${y}deg) scale(${s})`\n\n\n  const [props, set] = useSpring({ xys: [0, 0, 1], config: { mass: 5, tension: 350, friction: 40 } })\n\n  return (\n    <>\n    <animated.div\n      className=\"card\" id=\"capture\"\n      onMouseMove={({ clientX: x, clientY: y }) => set({ xys: calc(x, y) })}\n      onMouseLeave={() => set({ xys: [0, 0, 1] })}\n      style={{ backgroundImage: 'url('+src+')', transform: props.xys.interpolate(trans)}}\n    />\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}