{"ast":null,"code":"import _slicedToArray from \"/Users/james/Documents/GitHub/SPRING-NFT-builder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/james/Documents/GitHub/SPRING-NFT-builder/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { useSpring, animated } from 'react-spring';\nimport html2canvas from \"html2canvas\";\nimport './styles.css';\n\nvar calc = function calc(x, y) {\n  return [-(y - window.innerHeight / 2) / 20, (x - window.innerWidth / 2) / 20, 1.1];\n};\n\nvar trans = function trans(x, y, s) {\n  return \"perspective(600px) rotateX(\".concat(x, \"deg) rotateY(\").concat(y, \"deg) scale(\").concat(s, \")\");\n};\n\nfunction PrintDiv(div) {\n  html2canvas(div, {\n    onrendered: function onrendered(canvas) {\n      var myImage = canvas.toDataURL();\n      downloadURI(myImage, \"MaSimulation.png\");\n    }\n  });\n}\n\nfunction downloadURI(uri, name) {\n  var link = document.createElement(\"a\");\n  link.download = name;\n  link.href = uri;\n  document.body.appendChild(link);\n  link.click(); //after creating link you should delete dynamic link\n  //clearDynamicLink(link); \n}\n\nfunction Card() {\n  var _useSpring = useSpring({\n    xys: [0, 0, 1],\n    config: {\n      mass: 5,\n      tension: 350,\n      friction: 40\n    }\n  }),\n      _useSpring2 = _slicedToArray(_useSpring, 2),\n      props = _useSpring2[0],\n      set = _useSpring2[1];\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: PrintDiv,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, \"Download Page as Image\"), /*#__PURE__*/React.createElement(animated.div, {\n    class: \"card\",\n    onMouseMove: function onMouseMove(_ref) {\n      var x = _ref.clientX,\n          y = _ref.clientY;\n      return set({\n        xys: calc(x, y)\n      });\n    },\n    onMouseLeave: function onMouseLeave() {\n      return set({\n        xys: [0, 0, 1]\n      });\n    },\n    style: {\n      transform: props.xys.interpolate(trans)\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }));\n}\n\nReactDOM.render( /*#__PURE__*/React.createElement(Card, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 17\n  }\n}), document.getElementById('root'));","map":{"version":3,"sources":["/Users/james/Documents/GitHub/SPRING-NFT-builder/src/index.js"],"names":["React","ReactDOM","useSpring","animated","html2canvas","calc","x","y","window","innerHeight","innerWidth","trans","s","PrintDiv","div","onrendered","canvas","myImage","toDataURL","downloadURI","uri","name","link","document","createElement","download","href","body","appendChild","click","Card","xys","config","mass","tension","friction","props","set","clientX","clientY","transform","interpolate","render","getElementById"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,cAApC;AACA,OAAOC,WAAP,MAAwB,aAAxB;AACA,OAAO,cAAP;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAACC,CAAD,EAAIC,CAAJ;AAAA,SAAU,CAAC,EAAEA,CAAC,GAAGC,MAAM,CAACC,WAAP,GAAqB,CAA3B,IAAgC,EAAjC,EAAqC,CAACH,CAAC,GAAGE,MAAM,CAACE,UAAP,GAAoB,CAAzB,IAA8B,EAAnE,EAAuE,GAAvE,CAAV;AAAA,CAAb;;AACA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACL,CAAD,EAAIC,CAAJ,EAAOK,CAAP;AAAA,8CAA2CN,CAA3C,0BAA4DC,CAA5D,wBAA2EK,CAA3E;AAAA,CAAd;;AAGA,SAASC,QAAT,CAAkBC,GAAlB,EACA;AACIV,EAAAA,WAAW,CAAEU,GAAF,EAAQ;AACfC,IAAAA,UAAU,EAAE,oBAASC,MAAT,EAAiB;AACzB,UAAIC,OAAO,GAAGD,MAAM,CAACE,SAAP,EAAd;AACAC,MAAAA,WAAW,CAACF,OAAD,EAAU,kBAAV,CAAX;AACL;AAJgB,GAAR,CAAX;AAMH;;AAED,SAASE,WAAT,CAAqBC,GAArB,EAA0BC,IAA1B,EAAgC;AAC5B,MAAIC,IAAI,GAAGC,QAAQ,CAACC,aAAT,CAAuB,GAAvB,CAAX;AAEAF,EAAAA,IAAI,CAACG,QAAL,GAAgBJ,IAAhB;AACAC,EAAAA,IAAI,CAACI,IAAL,GAAYN,GAAZ;AACAG,EAAAA,QAAQ,CAACI,IAAT,CAAcC,WAAd,CAA0BN,IAA1B;AACAA,EAAAA,IAAI,CAACO,KAAL,GAN4B,CAO5B;AACA;AACH;;AAED,SAASC,IAAT,GAAgB;AAAA,mBACO5B,SAAS,CAAC;AAAE6B,IAAAA,GAAG,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAP;AAAkBC,IAAAA,MAAM,EAAE;AAAEC,MAAAA,IAAI,EAAE,CAAR;AAAWC,MAAAA,OAAO,EAAE,GAApB;AAAyBC,MAAAA,QAAQ,EAAE;AAAnC;AAA1B,GAAD,CADhB;AAAA;AAAA,MACPC,KADO;AAAA,MACAC,GADA;;AAEd,sBACE,uDACA;AAAQ,IAAA,OAAO,EAAExB,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADA,eAEA,oBAAC,QAAD,CAAU,GAAV;AACE,IAAA,KAAK,EAAC,MADR;AAEE,IAAA,WAAW,EAAE;AAAA,UAAYP,CAAZ,QAAGgC,OAAH;AAAA,UAAwB/B,CAAxB,QAAegC,OAAf;AAAA,aAAgCF,GAAG,CAAC;AAAEN,QAAAA,GAAG,EAAE1B,IAAI,CAACC,CAAD,EAAIC,CAAJ;AAAX,OAAD,CAAnC;AAAA,KAFf;AAGE,IAAA,YAAY,EAAE;AAAA,aAAM8B,GAAG,CAAC;AAAEN,QAAAA,GAAG,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP;AAAP,OAAD,CAAT;AAAA,KAHhB;AAIE,IAAA,KAAK,EAAE;AAAES,MAAAA,SAAS,EAAEJ,KAAK,CAACL,GAAN,CAAUU,WAAV,CAAsB9B,KAAtB;AAAb,KAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFA,CADF;AAWD;;AAEDV,QAAQ,CAACyC,MAAT,eAAgB,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAA0BnB,QAAQ,CAACoB,cAAT,CAAwB,MAAxB,CAA1B","sourcesContent":["import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { useSpring, animated } from 'react-spring'\nimport html2canvas from \"html2canvas\";\nimport './styles.css'\n\nconst calc = (x, y) => [-(y - window.innerHeight / 2) / 20, (x - window.innerWidth / 2) / 20, 1.1]\nconst trans = (x, y, s) => `perspective(600px) rotateX(${x}deg) rotateY(${y}deg) scale(${s})`\n\n\nfunction PrintDiv(div)\n{\n    html2canvas((div), {\n        onrendered: function(canvas) {\n            var myImage = canvas.toDataURL();\n            downloadURI(myImage, \"MaSimulation.png\");\n      }\n    });\n}\n\nfunction downloadURI(uri, name) {\n    var link = document.createElement(\"a\");\n\n    link.download = name;\n    link.href = uri;\n    document.body.appendChild(link);\n    link.click();   \n    //after creating link you should delete dynamic link\n    //clearDynamicLink(link); \n}\n\nfunction Card() {\n  const [props, set] = useSpring({ xys: [0, 0, 1], config: { mass: 5, tension: 350, friction: 40 } })\n  return (\n    <>\n    <button onClick={PrintDiv}>Download Page as Image</button>\n    <animated.div\n      class=\"card\"\n      onMouseMove={({ clientX: x, clientY: y }) => set({ xys: calc(x, y) })}\n      onMouseLeave={() => set({ xys: [0, 0, 1] })}\n      style={{ transform: props.xys.interpolate(trans) }}\n    />\n    </>\n  )\n}\n\nReactDOM.render(<Card />, document.getElementById('root'))\n"]},"metadata":{},"sourceType":"module"}