{"ast":null,"code":"var _jsxFileName = \"/Users/james/Documents/GitHub/SPRING-NFT-builder/src/export.js\";\nimport React, { useCallback, useRef } from 'react';\nimport { Card } from \"./card\";\nimport { toPng } from 'html-to-image';\nexport function Export() {\n  var ref = useRef < HTMLDivElement > null;\n  var onButtonClick = useCallback(function () {\n    if (ref.current === null) {\n      return;\n    }\n\n    toPng(ref.current, {\n      cacheBust: true\n    }).then(function (dataUrl) {\n      var link = document.createElement('a');\n      link.download = 'my-image-name.png';\n      link.href = dataUrl;\n      link.click();\n    }).catch(function (err) {\n      console.log(err);\n    });\n  }, [ref]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: onButtonClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, \"Click me\"));\n}","map":{"version":3,"sources":["/Users/james/Documents/GitHub/SPRING-NFT-builder/src/export.js"],"names":["React","useCallback","useRef","Card","toPng","Export","ref","HTMLDivElement","onButtonClick","current","cacheBust","then","dataUrl","link","document","createElement","download","href","click","catch","err","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,MAA7B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,QAArB;AACA,SAASC,KAAT,QAAsB,eAAtB;AAEA,OAAO,SAAUC,MAAV,GAAmB;AAIlB,MAAMC,GAAG,GAAGJ,MAAM,GAACK,cAAP,GAAuB,IAAnC;AAEA,MAAMC,aAAa,GAAGP,WAAW,CAAC,YAAM;AACtC,QAAIK,GAAG,CAACG,OAAJ,KAAgB,IAApB,EAA0B;AACxB;AACD;;AAEDL,IAAAA,KAAK,CAACE,GAAG,CAACG,OAAL,EAAc;AAAEC,MAAAA,SAAS,EAAE;AAAb,KAAd,CAAL,CACGC,IADH,CACQ,UAACC,OAAD,EAAa;AACjB,UAAMC,IAAI,GAAGC,QAAQ,CAACC,aAAT,CAAuB,GAAvB,CAAb;AACAF,MAAAA,IAAI,CAACG,QAAL,GAAgB,mBAAhB;AACAH,MAAAA,IAAI,CAACI,IAAL,GAAYL,OAAZ;AACAC,MAAAA,IAAI,CAACK,KAAL;AACD,KANH,EAOGC,KAPH,CAOS,UAACC,GAAD,EAAS;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,KATH;AAUD,GAfgC,EAe9B,CAACd,GAAD,CAf8B,CAAjC;AAkBA,sBACI,uDACA;AAAK,IAAA,GAAG,EAAEA,GAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADA,eAIA;AAAQ,IAAA,OAAO,EAAEE,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJA,CADJ;AASP","sourcesContent":["import React, { useCallback, useRef } from 'react';\nimport { Card } from \"./card\";\nimport { toPng } from 'html-to-image';\n\nexport function  Export() {\n\n\n    \n        const ref = useRef<HTMLDivElement>(null)\n      \n        const onButtonClick = useCallback(() => {\n          if (ref.current === null) {\n            return\n          }\n      \n          toPng(ref.current, { cacheBust: true, })\n            .then((dataUrl) => {\n              const link = document.createElement('a')\n              link.download = 'my-image-name.png'\n              link.href = dataUrl\n              link.click()\n            })\n            .catch((err) => {\n              console.log(err)\n            })\n        }, [ref])\n      \n\n        return (\n            <>\n            <div ref={ref}>\n                <Card />\n            </div>\n            <button onClick={onButtonClick}>Click me</button>\n            </>\n        );\n    \n}"]},"metadata":{},"sourceType":"module"}