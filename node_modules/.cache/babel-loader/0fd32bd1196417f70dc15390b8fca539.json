{"ast":null,"code":"import _regeneratorRuntime from \"/Users/james/GitHub/SPRING-NFT-builder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/james/GitHub/SPRING-NFT-builder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/james/GitHub/SPRING-NFT-builder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/james/GitHub/SPRING-NFT-builder/src/upload.js\";\n\nimport React, { useState } from 'react';\nimport ReactDOM from \"react-dom\";\nimport { Upload } from 'antd';\nimport ImgCrop from 'antd-img-crop';\n\nvar getSrcFromFile = function getSrcFromFile(file) {\n  return new Promise(function (resolve) {\n    var reader = new FileReader();\n    reader.readAsDataURL(file.originFileObj);\n\n    reader.onload = function () {\n      return resolve(reader.result);\n    };\n  });\n};\n\nvar Demo = function Demo() {\n  var _useState = useState([{\n    uid: '-1',\n    url: 'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png'\n  }]),\n      _useState2 = _slicedToArray(_useState, 2),\n      fileList = _useState2[0],\n      setFileList = _useState2[1];\n\n  var onChange = function onChange(_ref) {\n    var newFileList = _ref.fileList;\n    setFileList(newFileList);\n  };\n\n  var onPreview = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(file) {\n      var src, imgWindow, image;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.t0 = file.url;\n\n              if (_context.t0) {\n                _context.next = 5;\n                break;\n              }\n\n              _context.next = 4;\n              return getSrcFromFile(file);\n\n            case 4:\n              _context.t0 = _context.sent;\n\n            case 5:\n              src = _context.t0;\n              imgWindow = window.open(src);\n\n              if (imgWindow) {\n                image = new Image();\n                image.src = src;\n                imgWindow.document.write(image.outerHTML);\n              } else {\n                window.location.href = src;\n              }\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function onPreview(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/React.createElement(ImgCrop, {\n    grid: true,\n    rotate: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Upload, {\n    action: \"https://www.mocky.io/v2/5cc8019d300000980a055e76\",\n    listType: \"picture-card\",\n    fileList: fileList,\n    onChange: onChange,\n    onPreview: onPreview,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, fileList.length < 3 && '+ Upload'));\n};\n\nReactDOM.render( /*#__PURE__*/React.createElement(Demo, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 17\n  }\n}), document.getElementById('root'));","map":{"version":3,"sources":["/Users/james/GitHub/SPRING-NFT-builder/src/upload.js"],"names":["React","useState","ReactDOM","Upload","ImgCrop","getSrcFromFile","file","Promise","resolve","reader","FileReader","readAsDataURL","originFileObj","onload","result","Demo","uid","url","fileList","setFileList","onChange","newFileList","onPreview","src","imgWindow","window","open","image","Image","document","write","outerHTML","location","href","length","render","getElementById"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,MAAT,QAAuB,MAAvB;AACA,OAAOC,OAAP,MAAoB,eAApB;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,IAAD,EAAU;AAC/B,SAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAa;AAC9B,QAAMC,MAAM,GAAG,IAAIC,UAAJ,EAAf;AACAD,IAAAA,MAAM,CAACE,aAAP,CAAqBL,IAAI,CAACM,aAA1B;;AACAH,IAAAA,MAAM,CAACI,MAAP,GAAgB;AAAA,aAAML,OAAO,CAACC,MAAM,CAACK,MAAR,CAAb;AAAA,KAAhB;AACD,GAJM,CAAP;AAKD,CAND;;AAQA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AAAA,kBACed,QAAQ,CAAC,CACvC;AACEe,IAAAA,GAAG,EAAE,IADP;AAEEC,IAAAA,GAAG,EAAE;AAFP,GADuC,CAAD,CADvB;AAAA;AAAA,MACVC,QADU;AAAA,MACAC,WADA;;AAQjB,MAAMC,QAAQ,GAAG,SAAXA,QAAW,OAA+B;AAAA,QAAlBC,WAAkB,QAA5BH,QAA4B;AAC9CC,IAAAA,WAAW,CAACE,WAAD,CAAX;AACD,GAFD;;AAIA,MAAMC,SAAS;AAAA,yEAAG,iBAAOhB,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BACJA,IAAI,CAACW,GADD;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA,qBACeZ,cAAc,CAACC,IAAD,CAD7B;;AAAA;AAAA;;AAAA;AACViB,cAAAA,GADU;AAEVC,cAAAA,SAFU,GAEEC,MAAM,CAACC,IAAP,CAAYH,GAAZ,CAFF;;AAIhB,kBAAIC,SAAJ,EAAe;AACPG,gBAAAA,KADO,GACC,IAAIC,KAAJ,EADD;AAEbD,gBAAAA,KAAK,CAACJ,GAAN,GAAYA,GAAZ;AACAC,gBAAAA,SAAS,CAACK,QAAV,CAAmBC,KAAnB,CAAyBH,KAAK,CAACI,SAA/B;AACD,eAJD,MAIO;AACLN,gBAAAA,MAAM,CAACO,QAAP,CAAgBC,IAAhB,GAAuBV,GAAvB;AACD;;AAVe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAATD,SAAS;AAAA;AAAA;AAAA,KAAf;;AAaA,sBACE,oBAAC,OAAD;AAAS,IAAA,IAAI,MAAb;AAAc,IAAA,MAAM,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AACE,IAAA,MAAM,EAAC,kDADT;AAEE,IAAA,QAAQ,EAAC,cAFX;AAGE,IAAA,QAAQ,EAAEJ,QAHZ;AAIE,IAAA,QAAQ,EAAEE,QAJZ;AAKE,IAAA,SAAS,EAAEE,SALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOGJ,QAAQ,CAACgB,MAAT,GAAkB,CAAlB,IAAuB,UAP1B,CADF,CADF;AAaD,CAtCD;;AAwCAhC,QAAQ,CAACiC,MAAT,eAAgB,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAA0BN,QAAQ,CAACO,cAAT,CAAwB,MAAxB,CAA1B","sourcesContent":["import React, { useState } from 'react';\nimport ReactDOM from \"react-dom\";\nimport { Upload } from 'antd';\nimport ImgCrop from 'antd-img-crop';\n\nconst getSrcFromFile = (file) => {\n  return new Promise((resolve) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file.originFileObj);\n    reader.onload = () => resolve(reader.result);\n  });\n};\n\nconst Demo = () => {\n  const [fileList, setFileList] = useState([\n    {\n      uid: '-1',\n      url: 'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png',\n    },\n  ]);\n\n  const onChange = ({ fileList: newFileList }) => {\n    setFileList(newFileList);\n  };\n\n  const onPreview = async (file) => {\n    const src = file.url || (await getSrcFromFile(file));\n    const imgWindow = window.open(src);\n\n    if (imgWindow) {\n      const image = new Image();\n      image.src = src;\n      imgWindow.document.write(image.outerHTML);\n    } else {\n      window.location.href = src;\n    }\n  };\n\n  return (\n    <ImgCrop grid rotate>\n      <Upload\n        action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\n        listType=\"picture-card\"\n        fileList={fileList}\n        onChange={onChange}\n        onPreview={onPreview}\n      >\n        {fileList.length < 3 && '+ Upload'}\n      </Upload>\n    </ImgCrop>\n  );\n};\n\nReactDOM.render(<Demo />, document.getElementById('root'));"]},"metadata":{},"sourceType":"module"}