{"ast":null,"code":"import _slicedToArray from \"/Users/james/Documents/GitHub/SPRING-NFT-builder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/james/Documents/GitHub/SPRING-NFT-builder/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { useSpring, animated } from 'react-spring';\nimport html2canvas from \"html2canvas\";\nimport './styles.css';\n\nvar calc = function calc(x, y) {\n  return [-(y - window.innerHeight / 2) / 20, (x - window.innerWidth / 2) / 20, 1.1];\n};\n\nvar trans = function trans(x, y, s) {\n  return \"perspective(600px) rotateX(\".concat(x, \"deg) rotateY(\").concat(y, \"deg) scale(\").concat(s, \")\");\n};\n\nsetUpDownloadPageAsImage();\n\nfunction setUpDownloadPageAsImage() {\n  document.getElementById(\"download-page-as-image\").addEventListener(\"click\", function () {\n    html2canvas(document.body).then(function (canvas) {\n      console.log(canvas);\n      simulateDownloadImageClick(canvas.toDataURL(), 'file-name.png');\n    });\n  });\n}\n\nfunction simulateDownloadImageClick(uri, filename) {\n  var link = document.createElement('a');\n\n  if (typeof link.download !== 'string') {\n    window.open(uri);\n  } else {\n    link.href = uri;\n    link.download = filename;\n    accountForFirefox(clickLink, link);\n  }\n}\n\nfunction clickLink(link) {\n  link.click();\n}\n\nfunction accountForFirefox(click) {\n  // wrapper function\n  var link = arguments[1];\n  document.body.appendChild(link);\n  click(link);\n  document.body.removeChild(link);\n}\n\nfunction Card() {\n  var _useSpring = useSpring({\n    xys: [0, 0, 1],\n    config: {\n      mass: 5,\n      tension: 350,\n      friction: 40\n    }\n  }),\n      _useSpring2 = _slicedToArray(_useSpring, 2),\n      props = _useSpring2[0],\n      set = _useSpring2[1];\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"button\", {\n    id: \"download-page-as-image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, \"Download Page as Image\"), /*#__PURE__*/React.createElement(animated.div, {\n    class: \"card\",\n    onMouseMove: function onMouseMove(_ref) {\n      var x = _ref.clientX,\n          y = _ref.clientY;\n      return set({\n        xys: calc(x, y)\n      });\n    },\n    onMouseLeave: function onMouseLeave() {\n      return set({\n        xys: [0, 0, 1]\n      });\n    },\n    style: {\n      transform: props.xys.interpolate(trans)\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }));\n}\n\nReactDOM.render( /*#__PURE__*/React.createElement(Card, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 17\n  }\n}), document.getElementById('root'));","map":{"version":3,"sources":["/Users/james/Documents/GitHub/SPRING-NFT-builder/src/index.js"],"names":["React","ReactDOM","useSpring","animated","html2canvas","calc","x","y","window","innerHeight","innerWidth","trans","s","setUpDownloadPageAsImage","document","getElementById","addEventListener","body","then","canvas","console","log","simulateDownloadImageClick","toDataURL","uri","filename","link","createElement","download","open","href","accountForFirefox","clickLink","click","arguments","appendChild","removeChild","Card","xys","config","mass","tension","friction","props","set","clientX","clientY","transform","interpolate","render"],"mappings":"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","sourcesContent":["import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { useSpring, animated } from 'react-spring'\nimport html2canvas from \"html2canvas\";\nimport './styles.css'\n\nconst calc = (x, y) => [-(y - window.innerHeight / 2) / 20, (x - window.innerWidth / 2) / 20, 1.1]\nconst trans = (x, y, s) => `perspective(600px) rotateX(${x}deg) rotateY(${y}deg) scale(${s})`\n\n\nsetUpDownloadPageAsImage();\n\nfunction setUpDownloadPageAsImage() {\n  document.getElementById(\"download-page-as-image\").addEventListener(\"click\", function() {\n    html2canvas(document.body).then(function(canvas) {\n      console.log(canvas);\n      simulateDownloadImageClick(canvas.toDataURL(), 'file-name.png');\n    });\n  });\n}\n\nfunction simulateDownloadImageClick(uri, filename) {\n  var link = document.createElement('a');\n  if (typeof link.download !== 'string') {\n    window.open(uri);\n  } else {\n    link.href = uri;\n    link.download = filename;\n    accountForFirefox(clickLink, link);\n  }\n}\n\nfunction clickLink(link) {\n  link.click();\n}\n\nfunction accountForFirefox(click) { // wrapper function\n  let link = arguments[1];\n  document.body.appendChild(link);\n  click(link);\n  document.body.removeChild(link);\n}\n\nfunction Card() {\n  const [props, set] = useSpring({ xys: [0, 0, 1], config: { mass: 5, tension: 350, friction: 40 } })\n  return (\n    <>\n    <button id=\"download-page-as-image\">Download Page as Image</button>\n    <animated.div\n      class=\"card\"\n      onMouseMove={({ clientX: x, clientY: y }) => set({ xys: calc(x, y) })}\n      onMouseLeave={() => set({ xys: [0, 0, 1] })}\n      style={{ transform: props.xys.interpolate(trans) }}\n    />\n    </>\n  )\n}\n\nReactDOM.render(<Card />, document.getElementById('root'))\n"]},"metadata":{},"sourceType":"module"}