{"ast":null,"code":"import _classCallCheck from \"/Users/james/GitHub/SPRING-NFT-builder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/james/GitHub/SPRING-NFT-builder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/james/GitHub/SPRING-NFT-builder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/Users/james/GitHub/SPRING-NFT-builder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/james/GitHub/SPRING-NFT-builder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/Users/james/GitHub/SPRING-NFT-builder/src/content.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport { Card } from \"./card\";\nimport Button from '@mui/material/Button';\nimport { styled } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Grid from '@mui/material/Grid';\nvar Input = styled('input')({\n  display: 'none'\n});\n\nvar ImageFile = /*#__PURE__*/function (_React$Component) {\n  _inherits(ImageFile, _React$Component);\n\n  var _super = _createSuper(ImageFile);\n\n  function ImageFile(props) {\n    var _this;\n\n    _classCallCheck(this, ImageFile);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      id: \"someUniqueId\",\n      // I would use this.props.id for a real world implementation\n      imageURI: null\n    };\n    return _this;\n  }\n\n  _createClass(ImageFile, [{\n    key: \"buildImgTag\",\n    value: function buildImgTag() {\n      var imgTag = null;\n      if (this.state.imageURI !== null) imgTag = this.state.imageURI;\n      /*         imgTag = (<div className=\"row\">\n                          <div className=\"small-9 small-centered columns\">\n                            <img className=\"thumbnail\" src={this.state.imageURI}></img>\n                          </div>\n                        </div>); */\n\n      return imgTag;\n    }\n  }, {\n    key: \"readURI\",\n    value: function readURI(e) {\n      if (e.target.files && e.target.files[0]) {\n        var reader = new FileReader();\n\n        reader.onload = function (ev) {\n          this.setState({\n            imageURI: ev.target.result\n          });\n        }.bind(this);\n\n        reader.readAsDataURL(e.target.files[0]);\n      }\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(e) {\n      this.readURI(e); // maybe call this with webworker or async library?\n\n      if (this.props.onChange !== undefined) this.props.onChange(e); // propagate to parent component\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var imgTag = this.buildImgTag();\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        md: 8,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: this.state.id,\n        className: \"button\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Input, {\n        accept: \"image/*\",\n        id: this.state.id,\n        multiple: true,\n        type: \"file\",\n        onChange: this.handleChange.bind(this),\n        className: \"show-for-sr\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(Box, {\n        component: \"span\",\n        sx: {\n          p: 2,\n          border: '1px dashed grey'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"contained\",\n        component: \"span\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }\n      }, \"Upload\")))), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        md: \"auto\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        id: \"export\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        src: imgTag,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }\n      }))));\n    }\n  }]);\n\n  return ImageFile;\n}(React.Component);\n\nexport { ImageFile as default };","map":{"version":3,"sources":["/Users/james/GitHub/SPRING-NFT-builder/src/content.js"],"names":["React","Card","Button","styled","Box","Grid","Input","display","ImageFile","props","state","id","imageURI","imgTag","e","target","files","reader","FileReader","onload","ev","setState","result","bind","readAsDataURL","readURI","onChange","undefined","buildImgTag","handleChange","p","border","Component"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Card } from \"./card\";\nimport Button from '@mui/material/Button';\nimport { styled } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Grid from '@mui/material/Grid';\n\nconst Input = styled('input')({\n  display: 'none',\n});\n\nexport default class ImageFile extends React.Component {\n\n    constructor(props){\n      super(props);\n      this.state = {\n        id : \"someUniqueId\", // I would use this.props.id for a real world implementation\n        imageURI : null\n      }\n    }\n    \n    buildImgTag(){\n      let imgTag = null;\n      if (this.state.imageURI !== null)\n      imgTag = (this.state.imageURI);\n/*         imgTag = (<div className=\"row\">\n                    <div className=\"small-9 small-centered columns\">\n                      <img className=\"thumbnail\" src={this.state.imageURI}></img>\n                    </div>\n                  </div>); */\n      return imgTag;\n    }\n    \n    readURI(e){\n      if(e.target.files && e.target.files[0]){\n        let reader = new FileReader();\n        reader.onload = function(ev){\n          this.setState({imageURI:ev.target.result});\n        }.bind(this);\n        reader.readAsDataURL(e.target.files[0]);\n      }\n    }\n    \n    handleChange(e){\n      this.readURI(e); // maybe call this with webworker or async library?\n      if (this.props.onChange !== undefined)\n        this.props.onChange(e); // propagate to parent component\n    }\n  \n    render() {\n      const imgTag = this.buildImgTag();\n  \n      return <>\n        <Grid item xs={12} md={8}>\n          <label htmlFor={this.state.id} className=\"button\">\n            <Input accept=\"image/*\" id={this.state.id} multiple type=\"file\" onChange={this.handleChange.bind(this)} className=\"show-for-sr\"/>\n            <Box component=\"span\" sx={{ p: 2, border: '1px dashed grey' }}>\n              <Button variant=\"contained\" component=\"span\">\n                Upload\n              </Button>\n            </Box>\n          </label>\n        </Grid>\n        <Grid item xs={12} md={\"auto\"}>\n          <div id=\"export\">\n            <Card src={imgTag}/>\n          </div>\n        </Grid>\n    </>;\n    }\n  }"]},"metadata":{},"sourceType":"module"}