{"ast":null,"code":"import _classCallCheck from \"/Users/james/Documents/GitHub/SPRING-NFT-builder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/james/Documents/GitHub/SPRING-NFT-builder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/james/Documents/GitHub/SPRING-NFT-builder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/Users/james/Documents/GitHub/SPRING-NFT-builder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/james/Documents/GitHub/SPRING-NFT-builder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/Users/james/Documents/GitHub/SPRING-NFT-builder/src/export.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { useCallback, useRef } from 'react';\nimport { Card } from \"./card\";\nimport * as htmlToImage from 'html-to-image';\nimport { toPng, toJpeg, toBlob, toPixelData, toSvg } from 'html-to-image';\nimport download from \"downloadjs\";\n\nvar ImageFile = /*#__PURE__*/function (_React$Component) {\n  _inherits(ImageFile, _React$Component);\n\n  var _super = _createSuper(ImageFile);\n\n  function ImageFile(props) {\n    var _this;\n\n    _classCallCheck(this, ImageFile);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      id: \"someUniqueId\",\n      // I would use this.props.id for a real world implementation\n      imageURI: null\n    };\n    return _this;\n  }\n\n  _createClass(ImageFile, [{\n    key: \"buildImgTag\",\n    value: function buildImgTag() {\n      var imgTag = null;\n      if (this.state.imageURI !== null) imgTag = /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"small-9 small-centered columns\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        className: \"thumbnail\",\n        src: this.state.imageURI,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 21\n        }\n      })));\n      return imgTag;\n    }\n  }, {\n    key: \"readURI\",\n    value: function readURI(e) {\n      if (e.target.files && e.target.files[0]) {\n        var reader = new FileReader();\n\n        reader.onload = function (ev) {\n          this.setState({\n            imageURI: ev.target.result\n          });\n        }.bind(this);\n\n        reader.readAsDataURL(e.target.files[0]);\n      }\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(e) {\n      this.readURI(e); // maybe call this with webworker or async library?\n\n      if (this.props.onChange !== undefined) this.props.onChange(e); // propagate to parent component\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var imgTag = this.buildImgTag();\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 12\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: this.state.id,\n        className: \"button\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }\n      }, \"Upload an image\"), /*#__PURE__*/React.createElement(\"input\", {\n        id: this.state.id,\n        type: \"file\",\n        onChange: this.handleChange.bind(this),\n        className: \"show-for-sr\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }\n      }), imgTag);\n    }\n  }]);\n\n  return ImageFile;\n}(React.Component);\n\nexport function Export() {\n  var onButtonClick = function onButtonClick() {\n    var domElement = document.getElementById('export');\n    htmlToImage.toJpeg(domElement).then(function (dataUrl) {\n      console.log(dataUrl);\n      download(dataUrl, 'image.jpeg');\n    }).catch(function (error) {\n      console.error('oops, something went wrong!', error);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"export\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(ImageFile, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    id: \"my-node\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: onButtonClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, \"Download as JPEG\")));\n}","map":{"version":3,"sources":["/Users/james/Documents/GitHub/SPRING-NFT-builder/src/export.js"],"names":["React","useCallback","useRef","Card","htmlToImage","toPng","toJpeg","toBlob","toPixelData","toSvg","download","ImageFile","props","state","id","imageURI","imgTag","e","target","files","reader","FileReader","onload","ev","setState","result","bind","readAsDataURL","readURI","onChange","undefined","buildImgTag","handleChange","Component","Export","onButtonClick","domElement","document","getElementById","then","dataUrl","console","log","catch","error"],"mappings":"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","sourcesContent":["import React, { useCallback, useRef } from 'react';\nimport { Card } from \"./card\";\nimport * as htmlToImage from 'html-to-image';\nimport { toPng, toJpeg, toBlob, toPixelData, toSvg } from 'html-to-image';\nimport download from \"downloadjs\";\n\nclass ImageFile extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      id : \"someUniqueId\", // I would use this.props.id for a real world implementation\n      imageURI : null\n    }\n  }\n  \n  buildImgTag(){\n    let imgTag = null;\n    if (this.state.imageURI !== null)\n      imgTag = (<div className=\"row\">\n                  <div className=\"small-9 small-centered columns\">\n                    <img className=\"thumbnail\" src={this.state.imageURI}></img>\n                  </div>\n                </div>);\n    return imgTag;\n  }\n  \n  readURI(e){\n    if(e.target.files && e.target.files[0]){\n      let reader = new FileReader();\n      reader.onload = function(ev){\n        this.setState({imageURI:ev.target.result});\n      }.bind(this);\n      reader.readAsDataURL(e.target.files[0]);\n    }\n  }\n  \n  handleChange(e){\n    this.readURI(e); // maybe call this with webworker or async library?\n    if (this.props.onChange !== undefined)\n      this.props.onChange(e); // propagate to parent component\n  }\n\n  render() {\n    const imgTag = this.buildImgTag();\n\n    return <div>\n            <label\n              htmlFor={this.state.id}\n              className=\"button\">\n              Upload an image\n            </label>\n            <input\n              id={this.state.id}\n              type=\"file\"\n              onChange={this.handleChange.bind(this)}\n              className=\"show-for-sr\" />\n            {imgTag}\n          </div>;\n  }\n}\n\n\nexport function Export() {\n\n  const onButtonClick = () => {\n    var domElement = document.getElementById('export');\n    htmlToImage.toJpeg(domElement)\n      .then(function (dataUrl) {\n        console.log(dataUrl);\n        download(dataUrl, 'image.jpeg');\n      })\n      .catch(function (error) {\n        console.error('oops, something went wrong!', error);\n      });\n  };\n  return (\n    <>\n      <div id=\"export\">\n        <Card />\n        <ImageFile />\n      </div>\n      <div className=\"App\" id=\"my-node\">\n          <button onClick={onButtonClick}>Download as JPEG</button>\n      </div>\n    </>\n    \n  );\n}"]},"metadata":{},"sourceType":"module"}