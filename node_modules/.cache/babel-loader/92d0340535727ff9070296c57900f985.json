{"ast":null,"code":"import _regeneratorRuntime from \"/Users/james/GitHub/SPRING-NFT-builder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/james/GitHub/SPRING-NFT-builder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/james/GitHub/SPRING-NFT-builder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/james/GitHub/SPRING-NFT-builder/src/upload.js\";\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css';\nimport { Upload } from 'antd';\nimport ImgCrop from 'antd-img-crop';\nexport function Upload1(_ref) {\n  var id = _ref.id,\n      className = _ref.className,\n      onChange = _ref.onChange;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      fileList = _useState2[0],\n      setFileList = _useState2[1];\n  /*   const onChange = ({ fileList: newFileList }) => {\n      setFileList(newFileList);\n    }; */\n\n\n  var onPreview = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(file) {\n      var src, image, imgWindow;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              src = file.url;\n\n              if (src) {\n                _context.next = 5;\n                break;\n              }\n\n              _context.next = 4;\n              return new Promise(function (resolve) {\n                var reader = new FileReader();\n                reader.readAsDataURL(file.originFileObj);\n\n                reader.onload = function () {\n                  return resolve(reader.result);\n                };\n              });\n\n            case 4:\n              src = _context.sent;\n\n            case 5:\n              image = new Image();\n              image.src = src;\n              imgWindow = window.open(src);\n              imgWindow.document.write(image.outerHTML);\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function onPreview(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/React.createElement(ImgCrop, {\n    rotate: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Upload, {\n    action: \"https://www.mocky.io/v2/5cc8019d300000980a055e76\",\n    listType: \"picture-card\",\n    fileList: fileList,\n    onChange: onChange,\n    onPreview: onPreview,\n    id: id,\n    className: className,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, fileList.length < 5 && '+ Upload'));\n}\n;","map":{"version":3,"sources":["/Users/james/GitHub/SPRING-NFT-builder/src/upload.js"],"names":["React","useState","ReactDOM","Upload","ImgCrop","Upload1","id","className","onChange","fileList","setFileList","onPreview","file","src","url","Promise","resolve","reader","FileReader","readAsDataURL","originFileObj","onload","result","image","Image","imgWindow","window","open","document","write","outerHTML","length"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,oBAAP;AACA,SAASC,MAAT,QAAuB,MAAvB;AACA,OAAOC,OAAP,MAAoB,eAApB;AAEA,OAAO,SAASC,OAAT,OAA2C;AAAA,MAAzBC,EAAyB,QAAzBA,EAAyB;AAAA,MAArBC,SAAqB,QAArBA,SAAqB;AAAA,MAAXC,QAAW,QAAXA,QAAW;;AAAA,kBAChBP,QAAQ,CAAC,EAAD,CADQ;AAAA;AAAA,MACzCQ,QADyC;AAAA,MAC/BC,WAD+B;AAKlD;AACA;AACA;;;AAEE,MAAMC,SAAS;AAAA,yEAAG,iBAAMC,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACZC,cAAAA,GADY,GACND,IAAI,CAACE,GADC;;AAAA,kBAEXD,GAFW;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAGF,IAAIE,OAAJ,CAAY,UAAAC,OAAO,EAAI;AACjC,oBAAMC,MAAM,GAAG,IAAIC,UAAJ,EAAf;AACAD,gBAAAA,MAAM,CAACE,aAAP,CAAqBP,IAAI,CAACQ,aAA1B;;AACAH,gBAAAA,MAAM,CAACI,MAAP,GAAgB;AAAA,yBAAML,OAAO,CAACC,MAAM,CAACK,MAAR,CAAb;AAAA,iBAAhB;AACD,eAJW,CAHE;;AAAA;AAGdT,cAAAA,GAHc;;AAAA;AASVU,cAAAA,KATU,GASF,IAAIC,KAAJ,EATE;AAUhBD,cAAAA,KAAK,CAACV,GAAN,GAAYA,GAAZ;AACMY,cAAAA,SAXU,GAWEC,MAAM,CAACC,IAAP,CAAYd,GAAZ,CAXF;AAYhBY,cAAAA,SAAS,CAACG,QAAV,CAAmBC,KAAnB,CAAyBN,KAAK,CAACO,SAA/B;;AAZgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAATnB,SAAS;AAAA;AAAA;AAAA,KAAf;;AAeA,sBACE,oBAAC,OAAD;AAAS,IAAA,MAAM,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AACE,IAAA,MAAM,EAAC,kDADT;AAEE,IAAA,QAAQ,EAAC,cAFX;AAGE,IAAA,QAAQ,EAAEF,QAHZ;AAIE,IAAA,QAAQ,EAAED,QAJZ;AAKE,IAAA,SAAS,EAAEG,SALb;AAME,IAAA,EAAE,EAAEL,EANN;AAOE,IAAA,SAAS,EAAEC,SAPb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASGE,QAAQ,CAACsB,MAAT,GAAkB,CAAlB,IAAuB,UAT1B,CADF,CADF;AAeD;AAAA","sourcesContent":["import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css';\nimport { Upload } from 'antd';\nimport ImgCrop from 'antd-img-crop';\n\nexport function Upload1({id, className,onChange}) {\n  const [fileList, setFileList] = useState([\n\n  ]);\n\n/*   const onChange = ({ fileList: newFileList }) => {\n    setFileList(newFileList);\n  }; */\n\n  const onPreview = async file => {\n    let src = file.url;\n    if (!src) {\n      src = await new Promise(resolve => {\n        const reader = new FileReader();\n        reader.readAsDataURL(file.originFileObj);\n        reader.onload = () => resolve(reader.result);\n      });\n    }\n    const image = new Image();\n    image.src = src;\n    const imgWindow = window.open(src);\n    imgWindow.document.write(image.outerHTML);\n  };\n\n  return (\n    <ImgCrop rotate>\n      <Upload\n        action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\n        listType=\"picture-card\"\n        fileList={fileList}\n        onChange={onChange}\n        onPreview={onPreview}\n        id={id}\n        className={className}\n      >\n        {fileList.length < 5 && '+ Upload'}\n      </Upload>\n    </ImgCrop>\n  );\n};"]},"metadata":{},"sourceType":"module"}