{"ast":null,"code":"import _regeneratorRuntime from \"/Users/james/Documents/GitHub/SPRING-NFT-builder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/james/Documents/GitHub/SPRING-NFT-builder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/Users/james/Documents/GitHub/SPRING-NFT-builder/src/export.js\";\nimport React, { useCallback, useRef } from 'react';\nimport { Card } from \"./card\";\nimport { toPng, toJpeg, toBlob, toPixelData, toSvg } from 'html-to-image';\nimport download from \"downloadjs\";\nexport function Export() {\n  var ref = useRef < HTMLDivElement > null;\n  var handleClick = useCallback( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!ref.current) {\n              _context.next = 11;\n              break;\n            }\n\n            _context.t0 = download;\n            _context.next = 4;\n            return toJpeg(ref.current);\n\n          case 4:\n            _context.t1 = _context.sent;\n            (0, _context.t0)(_context.t1, \"test.jpg\");\n            _context.t2 = download;\n            _context.next = 9;\n            return toSvg(ref.current);\n\n          case 9:\n            _context.t3 = _context.sent;\n            (0, _context.t2)(_context.t3, \"test.svg\");\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  })), [ref?.current]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    ref: ref,\n    className: \"test\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"c\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, \"Hello World\")), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: function onClick() {\n      return handleClick();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, \"Click\"));\n}","map":{"version":3,"sources":["/Users/james/Documents/GitHub/SPRING-NFT-builder/src/export.js"],"names":["React","useCallback","useRef","Card","toPng","toJpeg","toBlob","toPixelData","toSvg","download","Export","ref","HTMLDivElement","handleClick","current"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,MAA7B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,QAArB;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,MAAxB,EAAgCC,WAAhC,EAA6CC,KAA7C,QAA0D,eAA1D;AACA,OAAOC,QAAP,MAAqB,YAArB;AAEA,OAAO,SAASC,MAAT,GAAkB;AAEvB,MAAMC,GAAG,GAAGT,MAAM,GAACU,cAAP,GAAuB,IAAnC;AAEA,MAAMC,WAAW,GAAGZ,WAAW,wEAAC;AAAA;AAAA;AAAA;AAAA;AAAA,iBAC1BU,GAAG,CAACG,OADsB;AAAA;AAAA;AAAA;;AAAA,0BAE5BL,QAF4B;AAAA;AAAA,mBAEbJ,MAAM,CAACM,GAAG,CAACG,OAAL,CAFO;;AAAA;AAAA;AAAA,0CAEQ,UAFR;AAAA,0BAG5BL,QAH4B;AAAA;AAAA,mBAGbD,KAAK,CAACG,GAAG,CAACG,OAAL,CAHQ;;AAAA;AAAA;AAAA,0CAGO,UAHP;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAD,IAK5B,CAACH,GAAG,EAAEG,OAAN,CAL4B,CAA/B;AAOA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,GAAG,EAAEH,GAAV;AAAe,IAAA,SAAS,EAAC,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,CADF,eAIE;AAAQ,IAAA,OAAO,EAAE;AAAA,aAAME,WAAW,EAAjB;AAAA,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAJF,CADF;AAQD","sourcesContent":["import React, { useCallback, useRef } from 'react';\nimport { Card } from \"./card\";\nimport { toPng, toJpeg, toBlob, toPixelData, toSvg } from 'html-to-image';\nimport download from \"downloadjs\";\n\nexport function Export() {\n\n  const ref = useRef<HTMLDivElement>(null);\n\n  const handleClick = useCallback(async () => {\n    if (ref.current) {\n      download(await toJpeg(ref.current), \"test.jpg\");\n      download(await toSvg(ref.current), \"test.svg\");\n    }\n  }, [ref?.current]);\n\n  return (\n    <div>\n      <div ref={ref} className=\"test\">\n        <div className=\"c\">Hello World</div>\n      </div>\n      <button onClick={() => handleClick()}>Click</button>\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}