{"ast":null,"code":"import _slicedToArray from \"/Users/james/Documents/GitHub/SPRING-NFT-builder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/james/Documents/GitHub/SPRING-NFT-builder/src/index.js\";\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { useState } from 'react';\nimport { useSpring, animated } from 'react-spring';\nimport './styles.css';\nimport * as htmlToImage from 'html-to-image';\n\nvar calc = function calc(x, y) {\n  return [-(y - window.innerHeight / 2) / 20, (x - window.innerWidth / 2) / 20, 1.1];\n};\n\nvar trans = function trans(x, y, s) {\n  return \"perspective(600px) rotateX(\".concat(x, \"deg) rotateY(\").concat(y, \"deg) scale(\").concat(s, \")\");\n};\n\nvar HtmlToCanvas = function HtmlToCanvas(_ref) {\n  var data = _ref.data,\n      saveAs = _ref.saveAs;\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      time = _useState2[0],\n      setTime = _useState2[1];\n\n  var exportAsPicture = function exportAsPicture() {\n    var t0 = performance.now();\n    var data = document.getElementsByClassName('htmlToCanvasVis');\n\n    for (var i = 0; i < data.length; ++i) {\n      html2canvas(data[i]).then(function (canvas) {\n        var image = canvas.toDataURL('image/png', 1.0);\n        saveAs(image, 'exported-vis.png');\n      });\n    }\n\n    var t1 = performance.now();\n    var t = t1 - t0;\n    setTime(t.toFixed(3));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, \"HTML TO CANVAS\"), data.map(function (vis) {\n    return /*#__PURE__*/React.createElement(Visualization, {\n      visualization: vis,\n      className: \"htmlToCanvasVis\",\n      fromCanvas: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 20\n      }\n    });\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: exportAsPicture,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, \"capture\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, \"TOTAL TIME: \", time, \" ms\"));\n};\n\nfunction Card() {\n  var _useSpring = useSpring({\n    xys: [0, 0, 1],\n    config: {\n      mass: 5,\n      tension: 350,\n      friction: 40\n    }\n  }),\n      _useSpring2 = _slicedToArray(_useSpring, 2),\n      props = _useSpring2[0],\n      set = _useSpring2[1];\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: PrintDiv,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, \"Download Page as Image\"), /*#__PURE__*/React.createElement(animated.div, {\n    class: \"card\",\n    onMouseMove: function onMouseMove(_ref2) {\n      var x = _ref2.clientX,\n          y = _ref2.clientY;\n      return set({\n        xys: calc(x, y)\n      });\n    },\n    onMouseLeave: function onMouseLeave() {\n      return set({\n        xys: [0, 0, 1]\n      });\n    },\n    style: {\n      transform: props.xys.interpolate(trans)\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }));\n}\n\nReactDOM.render( /*#__PURE__*/React.createElement(Card, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 17\n  }\n}), document.getElementById('root'));","map":{"version":3,"sources":["/Users/james/Documents/GitHub/SPRING-NFT-builder/src/index.js"],"names":["React","ReactDOM","useState","useSpring","animated","htmlToImage","calc","x","y","window","innerHeight","innerWidth","trans","s","HtmlToCanvas","data","saveAs","time","setTime","exportAsPicture","t0","performance","now","document","getElementsByClassName","i","length","html2canvas","then","canvas","image","toDataURL","t1","t","toFixed","map","vis","Card","xys","config","mass","tension","friction","props","set","PrintDiv","clientX","clientY","transform","interpolate","render","getElementById"],"mappings":"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","sourcesContent":["import React from 'react'\nimport ReactDOM from 'react-dom'\nimport {useState} from 'react';\nimport { useSpring, animated } from 'react-spring'\nimport './styles.css'\nimport * as htmlToImage from 'html-to-image';\n\nconst calc = (x, y) => [-(y - window.innerHeight / 2) / 20, (x - window.innerWidth / 2) / 20, 1.1]\nconst trans = (x, y, s) => `perspective(600px) rotateX(${x}deg) rotateY(${y}deg) scale(${s})`\n\nconst HtmlToCanvas = ({data, saveAs}) =>{\n\n    const [time, setTime] = useState(0)\n\n    const exportAsPicture = () => {\n\n        var t0 = performance.now()\n        \n        var data = document.getElementsByClassName('htmlToCanvasVis')\n\n        for (var i = 0; i < data.length; ++i){\n            html2canvas(data[i]).then((canvas)=>{\n                var image = canvas.toDataURL('image/png', 1.0);\n                saveAs(image, 'exported-vis.png') \n            })\n        }\n\n        var t1 = performance.now()\n\n        var t = t1 - t0\n\n        setTime(t.toFixed(3))\n\n      }\n\n    return <div>\n        <h1>HTML TO CANVAS</h1>\n        {data.map(vis=>{\n            return <Visualization visualization={vis} className=\"htmlToCanvasVis\" fromCanvas/>\n        })}\n        <button onClick={exportAsPicture}>capture</button>\n        <p>TOTAL TIME: {time} ms</p>\n    </div>\n};\n\nfunction Card() {\n  const [props, set] = useSpring({ xys: [0, 0, 1], config: { mass: 5, tension: 350, friction: 40 } })\n  return (\n    <>\n    <button onClick={PrintDiv}>Download Page as Image</button>\n    <animated.div\n      class=\"card\"\n      onMouseMove={({ clientX: x, clientY: y }) => set({ xys: calc(x, y) })}\n      onMouseLeave={() => set({ xys: [0, 0, 1] })}\n      style={{ transform: props.xys.interpolate(trans) }}\n    />\n    </>\n  )\n}\n\nReactDOM.render(<Card />, document.getElementById('root'))\n"]},"metadata":{},"sourceType":"module"}